/*
Deployment script for TodoList_DB

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "TodoList_DB"
:setvar DefaultFilePrefix "TodoList_DB"
:setvar DefaultDataPath "C:\Program Files\Microsoft SQL Server\MSSQL16.SQLEXPRESS\MSSQL\DATA\"
:setvar DefaultLogPath "C:\Program Files\Microsoft SQL Server\MSSQL16.SQLEXPRESS\MSSQL\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
/*
The type for column UserId in table [dbo].[TodoList] is currently  NCHAR (10) NULL but is being changed to  INT NULL. Data loss could occur and deployment may fail if the column contains data that is incompatible with type  INT NULL.
*/

IF EXISTS (select top 1 1 from [dbo].[TodoList])
    RAISERROR (N'Rows were detected. The schema update is terminating because data loss might occur.', 16, 127) WITH NOWAIT

GO
PRINT N'Dropping Default Constraint unnamed constraint on [dbo].[User]...';


GO
ALTER TABLE [dbo].[User] DROP CONSTRAINT [DF__User__IsDeleted__37A5467C];


GO
PRINT N'Starting rebuilding table [dbo].[TodoList]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_TodoList] (
    [ItemId]    INT            IDENTITY (1, 1) NOT NULL,
    [Title]     NVARCHAR (100) NULL,
    [Desc]      NVARCHAR (MAX) NULL,
    [CreatedOn] DATETIME       NULL,
    [IsDeleted] BIT            NULL,
    [ModifyOn]  DATETIME       NULL,
    [UserId]    INT            NULL,
    PRIMARY KEY CLUSTERED ([ItemId] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[TodoList])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_TodoList] ON;
        INSERT INTO [dbo].[tmp_ms_xx_TodoList] ([ItemId], [Title], [Desc], [CreatedOn], [IsDeleted], [ModifyOn], [UserId])
        SELECT   [ItemId],
                 [Title],
                 [Desc],
                 [CreatedOn],
                 [IsDeleted],
                 [ModifyOn],
                 [UserId]
        FROM     [dbo].[TodoList]
        ORDER BY [ItemId] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_TodoList] OFF;
    END

DROP TABLE [dbo].[TodoList];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_TodoList]', N'TodoList';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[User]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_User] (
    [UserId]    INT            IDENTITY (1, 1) NOT NULL,
    [UserName]  NVARCHAR (200) NULL,
    [Email]     NVARCHAR (200) NULL,
    [Password]  NVARCHAR (50)  NULL,
    [CreatedOn] DATETIME       NULL,
    [ModifyOn]  DATETIME       NULL,
    [IsDeleted] BIT            DEFAULT 0 NULL,
    PRIMARY KEY CLUSTERED ([UserId] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[User])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_User] ON;
        INSERT INTO [dbo].[tmp_ms_xx_User] ([UserId], [UserName], [Email], [Password], [CreatedOn], [ModifyOn], [IsDeleted])
        SELECT   [UserId],
                 [UserName],
                 [Email],
                 [Password],
                 [CreatedOn],
                 [ModifyOn],
                 [IsDeleted]
        FROM     [dbo].[User]
        ORDER BY [UserId] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_User] OFF;
    END

DROP TABLE [dbo].[User];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_User]', N'User';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating Foreign Key [dbo].[FK_TodoList_User]...';


GO
ALTER TABLE [dbo].[TodoList] WITH NOCHECK
    ADD CONSTRAINT [FK_TodoList_User] FOREIGN KEY ([UserId]) REFERENCES [dbo].[User] ([UserId]);


GO
PRINT N'Checking existing data against newly created constraints';


GO
USE [$(DatabaseName)];


GO
ALTER TABLE [dbo].[TodoList] WITH CHECK CHECK CONSTRAINT [FK_TodoList_User];


GO
PRINT N'Update complete.';


GO
